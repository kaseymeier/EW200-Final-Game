import pygame
import sys
import random

pygame.init()
clock = pygame.time.Clock()

screen_width = 960
screen_height = 576
tile_size = 64
border = pygame.image.load("assets/images/ground.png")
grass = pygame.image.load("assets/images/tile000.png")
centerdot = pygame.image.load("assets/images/tile015.png")
halflineedge = pygame.image.load("assets/images/tile003.png")
bottomhalflineedge = pygame.image.load("assets/images/tile042.png")
halfline = pygame.image.load("assets/images/tile016.png")
topleftcorner = pygame.image.load("assets/images/tile005.png")
toprightcorner = pygame.image.load("assets/images/tile006.png")
leftsideline = pygame.image.load("assets/images/tile014.png")
topleftcurve = pygame.image.load("assets/images/tile007.png")
bottomleftcurve = pygame.image.load("assets/images/tile033.png")
bottomrightcurve = pygame.image.load("assets/images/tile035.png")
bottomcurve = pygame.image.load("assets/images/tile048.png")
leftedge = pygame.image.load("assets/images/tile020.png")
rightedge = pygame.image.load("assets/images/tile022.png")
toprightcurve = pygame.image.load("assets/images/tile009.png")
curvehalfline = pygame.image.load("assets/images/tile046.png")
topsideline = pygame.image.load("assets/images/tile002.png")
bottomleftcorner = pygame.image.load("assets/images/tile018.png")
bottomrightcorner = pygame.image.load("assets/images/tile019.png")
rightedgeline = pygame.image.load("assets/images/tile017.png")
bottomsideline = pygame.image.load("assets/images/tile041.png")
topright18 = pygame.image.load("assets/images/tile037.png")
topleft18 = pygame.image.load("assets/images/tile036.png")
bottomleft18 = pygame.image.load("assets/images/tile050.png")
bottomright18 = pygame.image.load("assets/images/tile049.png")
topleftgoalpost = pygame.image.load("assets/images/element (32).png")
toprightgoalpost = pygame.image.load("assets/images/element (34).png")
backgoal = pygame.image.load("assets/images/element (41).png")
frontgoal = pygame.image.load("assets/images/element (43).png")
bottomleftgoalpost = pygame.image.load("assets/images/element (50).png")
bottomrightgoalpost = pygame.image.load("assets/images/element (52).png")
rightbottomgoalpost = pygame.image.load("assets/images/element (54).png")
rightfrontgoalpost = pygame.image.load("assets/images/element (53).png")
frontgoalpost = pygame.image.load("assets/images/element (44).png")
backgoalpost = pygame.image.load("assets/images/element (45).png")
screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption('FOOSEBALL')
background = screen.copy()

def drawbackground():
    for i in range(screen_width):
        background.blit(border, (0, 0))
        background.blit(border, (tile_size, 0))
        background.blit(border, (2*tile_size, 0))
        background.blit(border, (3 * tile_size, 0))
        background.blit(border, (4 * tile_size, 0))
        background.blit(border, (5 * tile_size, 0))
        background.blit(border, (6 * tile_size, 0))
        background.blit(border, (7 * tile_size, 0))
        background.blit(border, (8 * tile_size, 0))
        background.blit(border, (9 * tile_size, 0))
        background.blit(border, (10 * tile_size, 0))
        background.blit(border, (11 * tile_size, 0))
        background.blit(border, (12 * tile_size, 0))
        background.blit(border, (13 * tile_size, 0))
        background.blit(border, (14 * tile_size, 0))
        background.blit(border, (15 * tile_size, 0))
        #bottom
        background.blit(border, (0, 8 * tile_size))
        background.blit(border, (tile_size, 8 * tile_size))
        background.blit(border, (2*tile_size, 8 * tile_size))
        background.blit(border, (3*tile_size, 8 * tile_size))
        background.blit(border, (4*tile_size, 8 * tile_size))
        background.blit(border, (5*tile_size, 8 * tile_size))
        background.blit(border, (6*tile_size, 8 * tile_size))
        background.blit(border, (7* tile_size, 8 * tile_size))
        background.blit(border, (8* tile_size, 8 * tile_size))
        background.blit(border, (9* tile_size, 8 * tile_size))
        background.blit(border, (10* tile_size, 8 * tile_size))
        background.blit(border, (11 * tile_size, 8 * tile_size))
        background.blit(border, (12 * tile_size, 8 * tile_size))
        background.blit(border, (13* tile_size, 8 * tile_size))
        background.blit(border, (14* tile_size, 8 * tile_size))
        #left
        background.blit(border, (0, tile_size))
        background.blit(border, (0, 2*tile_size))
        background.blit(border, (0, 3*tile_size))
        background.blit(border, (0, 4 * tile_size))
        background.blit(border, (0, 5 * tile_size))
        background.blit(border, (0, 6 * tile_size))
        background.blit(border, (0, 7 * tile_size))
        #right
        background.blit(border, ( 14*tile_size, 0))
        background.blit(border, (14* tile_size, tile_size))
        background.blit(border, (14 * tile_size, 2*tile_size))
        background.blit(border, (14 * tile_size, 3*tile_size))
        background.blit(border, (14 * tile_size, 4*tile_size))
        background.blit(border, (14 * tile_size, 5*tile_size))
        background.blit(border, (14 * tile_size, 6*tile_size))
        background.blit(border, (14 * tile_size, 7 * tile_size))
for i in range(screen_width):
    background.blit(topleftcorner, (tile_size, tile_size))
    background.blit(toprightcorner, (13*tile_size, tile_size))
    background.blit(bottomleftcorner, (tile_size, 7 * tile_size))
    background.blit(bottomrightcorner, (13 * tile_size, 7 * tile_size))
    background.blit(centerdot, (7*tile_size, 4*tile_size))
for i in range(screen_width):
    background.blit(topsideline, (2*tile_size,tile_size))
    background.blit(topsideline, (3 * tile_size, tile_size))
    background.blit(topsideline, (4 * tile_size, tile_size))
    background.blit(topsideline, (5 * tile_size, tile_size))
    background.blit(topsideline, (6 * tile_size, tile_size))
    background.blit(halflineedge, (7*tile_size, tile_size))
    background.blit(topsideline, (8 * tile_size, tile_size))
    background.blit(topsideline, (9 * tile_size, tile_size))
    background.blit(topsideline, (10 * tile_size, tile_size))
    background.blit(topsideline, (11 * tile_size, tile_size))
    background.blit(topsideline, (12 * tile_size, tile_size))
for i in range(screen_width):
    background.blit(leftsideline, (tile_size, 2*tile_size))
    background.blit(topright18, (2 * tile_size, 2*tile_size))
    background.blit(grass, (3 * tile_size, 2 * tile_size))
    background.blit(grass, (4 * tile_size, 2 * tile_size))
    background.blit(grass, (5 * tile_size, 2 * tile_size))
    background.blit(grass, (6 * tile_size, 2 * tile_size))
    background.blit(halfline, (7 * tile_size, 2 * tile_size))
    background.blit(grass, (8 * tile_size, 2 * tile_size))
    background.blit(grass, (9 * tile_size, 2 * tile_size))
    background.blit(grass, (10 * tile_size, 2 * tile_size))
    background.blit(grass, (11 * tile_size, 2 * tile_size))
    background.blit(topleft18, (12 * tile_size, 2 * tile_size))
    background.blit(rightedgeline, (13 * tile_size, 2 * tile_size))
for i in range(screen_width):
    background.blit(leftsideline, (tile_size, 3 * tile_size))
    background.blit(rightedgeline, (2 * tile_size, 3 * tile_size))
    background.blit(toprightcurve, (3 * tile_size, 3 * tile_size))
    background.blit(grass, (4 * tile_size, 3 * tile_size))
    background.blit(grass, (5 * tile_size, 3 * tile_size))
    background.blit(topleftcurve, (6 * tile_size, 3 * tile_size))
    background.blit(curvehalfline, (7 * tile_size, 3 * tile_size))
    background.blit(toprightcurve, (8 * tile_size, 3 * tile_size))
    background.blit(grass, (9 * tile_size, 3 * tile_size))
    background.blit(grass, (10 * tile_size, 3 * tile_size))
    background.blit(topleftcurve, (11 * tile_size, 3 * tile_size))
    background.blit(leftsideline, (12 * tile_size, 3 * tile_size))
    background.blit(rightedgeline, (13 * tile_size, 3 * tile_size))
for i in range(screen_width):
    background.blit(leftsideline, (tile_size, 4 * tile_size))
    background.blit(rightedgeline, (2 * tile_size, 4 * tile_size))
    background.blit(rightedge, (3 * tile_size, 4 * tile_size))
    background.blit(grass, (4 * tile_size, 4 * tile_size))
    background.blit(grass, (5 * tile_size, 4 * tile_size))
    background.blit(leftedge, (6 * tile_size, 4 * tile_size))
    background.blit(centerdot, (7 * tile_size, 4 * tile_size))
    background.blit(rightedge, (8 * tile_size, 4 * tile_size))
    background.blit(grass, (9 * tile_size, 4 * tile_size))
    background.blit(grass, (10 * tile_size, 4 * tile_size))
    background.blit(leftedge, (11 * tile_size, 4 * tile_size))
    background.blit(leftsideline, (12 * tile_size, 4 * tile_size))
    background.blit(rightedgeline, (13 * tile_size, 4 * tile_size))
for i in range(screen_width):
    background.blit(leftsideline, (tile_size, 5 * tile_size))
    background.blit(rightedgeline, (2 * tile_size, 5* tile_size))
    background.blit(bottomrightcurve, (3 * tile_size, 5 * tile_size))
    background.blit(grass, (4 * tile_size, 5* tile_size))
    background.blit(grass, (5 * tile_size, 5 * tile_size))
    background.blit(bottomleftcurve, (6 * tile_size, 5 * tile_size))
    background.blit(bottomcurve, (7 * tile_size, 5 * tile_size))
    background.blit(bottomrightcurve, (8 * tile_size, 5 * tile_size))
    background.blit(grass, (9 * tile_size, 5 * tile_size))
    background.blit(grass, (10 * tile_size, 5 * tile_size))
    background.blit(bottomleftcurve, (11 * tile_size, 5 * tile_size))
    background.blit(leftsideline, (12 * tile_size, 5 * tile_size))
    background.blit(rightedgeline, (13 * tile_size, 5 * tile_size))
for i in range(screen_width):
    background.blit(leftsideline, (tile_size, 6 * tile_size))
    background.blit(bottomleft18, (2 * tile_size, 6 * tile_size))
    background.blit(grass, (3 * tile_size, 6 * tile_size))
    background.blit(grass, (4 * tile_size, 6 * tile_size))
    background.blit(grass, (5 * tile_size,  6* tile_size))
    background.blit(grass, (6 * tile_size, 6 * tile_size))
    background.blit(halfline, (7 * tile_size, 6 * tile_size))
    background.blit(grass, (8 * tile_size, 6 * tile_size))
    background.blit(grass, (9 * tile_size, 6 * tile_size))
    background.blit(grass, (10 * tile_size, 6 * tile_size))
    background.blit(grass, (11 * tile_size, 6 * tile_size))
    background.blit(bottomright18, (12 * tile_size, 6 * tile_size))
    background.blit(rightedgeline, (13 * tile_size, 6 * tile_size))
for i in range(screen_width):
    background.blit(bottomsideline, (2 * tile_size, 7 * tile_size))
    background.blit(bottomsideline, (3 * tile_size, 7 * tile_size))
    background.blit(bottomsideline, (4 * tile_size, 7 * tile_size))
    background.blit(bottomsideline, (5 * tile_size, 7 * tile_size))
    background.blit(bottomsideline, (6 * tile_size, 7 * tile_size))
    background.blit(bottomhalflineedge, (7 * tile_size, 7 * tile_size))
    background.blit(bottomsideline, (8 * tile_size, 7 * tile_size))
    background.blit(bottomsideline, (9 * tile_size, 7 * tile_size))
    background.blit(bottomsideline, (10 * tile_size, 7 * tile_size))
    background.blit(bottomsideline, (11 * tile_size, 7 * tile_size))
    background.blit(bottomsideline, (12 * tile_size, 7 * tile_size))
for i in range(screen_width):
    #left goal
    background.blit(topleftgoalpost, (tile_size-16,3*tile_size))
    background.blit(toprightgoalpost, (2*tile_size-16, 3*tile_size))
    background.blit(backgoal, (tile_size-16, 4*tile_size))
    background.blit(frontgoal, (2*tile_size-16, 4*tile_size))
    background.blit(bottomleftgoalpost, (tile_size-16,5*tile_size))
    background.blit(bottomrightgoalpost, (2*tile_size-16, 5*tile_size))
    #right goal
    for i in range (screen_width):
    #background.blit()
    #background.blit()
        background.blit(backgoalpost, (13*tile_size+16git, 4*tile_size))
    background.blit(frontgoalpost, (12*tile_size+16, 4*tile_size))
    background.blit(rightfrontgoalpost, (12*tile_size+16, 5*tile_size))
    background.blit(rightbottomgoalpost, (13*tile_size+16, 5*tile_size))




#rows of red players

#rows of blue players


drawbackground()
screen.blit(background, (0, 0))
pygame.display.flip()
clock.tick(60)

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
